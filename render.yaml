services:
  - type: web
    name: aiblogger-api
    env: python
    plan: free
    buildCommand: pip install -r backend/requirements.txt
    startCommand: |
      bash -lc '
        if [ "$RUN_WORKER" = "1" ]; then
          python -m backend.workers.worker_entry &
        fi
        exec uvicorn backend.main:app --host 0.0.0.0 --port $PORT
      '
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: aiblogger-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: aiblogger-redis
          type: redis
          property: connectionString
      - key: ALLOWED_ORIGINS
        value: "*"
      - key: OPENAI_API_KEY
        sync: false
      - key: FAL_API_KEY
        sync: false
      - key: ELEVENLABS_API_KEY
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-east-1
      - key: AWS_S3_BUCKET
        sync: false
      - key: AWS_S3_ENDPOINT
        sync: false
      - key: AWS_S3_PUBLIC_BASE
        sync: false
      - key: RUN_WORKER
        value: "0"
      - key: FRONTEND_URL
        sync: false
      - key: FRONTEND_HOST
        fromService:
          name: aiblogger-frontend
          type: web
          property: host

  - type: worker
    name: aiblogger-worker
    env: python
    plan: starter
    buildCommand: pip install -r backend/requirements.txt
    startCommand: python -m backend.workers.worker_entry
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: aiblogger-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: aiblogger-redis
          type: redis
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: FAL_API_KEY
        sync: false
      - key: ELEVENLABS_API_KEY
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-east-1
      - key: AWS_S3_BUCKET
        sync: false
      - key: AWS_S3_ENDPOINT
        sync: false
      - key: AWS_S3_PUBLIC_BASE
        sync: false

  - type: redis
    name: aiblogger-redis
    plan: free
    ipAllowList: []
    maxmemoryPolicy: noeviction

  - type: web
    name: aiblogger-frontend
    env: node
    plan: free
    rootDir: frontend
    buildCommand: npm ci && npm run build
    startCommand: PORT=$PORT npm run start
    envVars:
      - key: NEXT_PUBLIC_API_HOST
        sync: false  # Set manually to your API URL like: https://aiblogger-api.onrender.com

databases:
  - name: aiblogger-db
    plan: free
    databaseName: aiblogger
    user: aiblogger
    ipAllowList: []
